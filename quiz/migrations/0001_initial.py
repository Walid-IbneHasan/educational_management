# Generated by Django 5.2 on 2025-05-31 06:00

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalQuizQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('true_false', 'True/False'), ('short', 'Short Answer')], default='mcq', max_length=50)),
                ('text', models.TextField()),
                ('image_url', models.URLField(blank=True, null=True)),
                ('marks', models.FloatField(default=1.0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
            ],
            options={
                'verbose_name': 'Global Quiz Question',
                'verbose_name_plural': 'Global Quiz Questions',
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.FloatField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('started', 'Started'), ('completed', 'Completed')], default='started', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizContainer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('timer_per_question', models.PositiveIntegerField(blank=True, null=True)),
                ('enable_negative_marking', models.BooleanField(default=False)),
                ('negative_marks', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_free', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuizOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('t', 'True'), ('f', 'False')], max_length=1)),
                ('text', models.CharField(max_length=300)),
                ('is_correct', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Quiz Option',
                'verbose_name_plural': 'Quiz Options',
            },
        ),
        migrations.CreateModel(
            name='QuizResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('short_answer', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField(null=True)),
                ('manual_score', models.FloatField(blank=True, null=True)),
            ],
        ),
    ]
