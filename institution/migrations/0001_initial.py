# Generated by Django 5.2 on 2025-05-31 06:00

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CurriculumTrack',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Curriculum Track',
                'verbose_name_plural': 'Curriculum Tracks',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='GlobalCurriculumTrack',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='e.g., Class 9, BSc in CSE', max_length=100)),
                ('description', models.TextField(blank=True, help_text='e.g., Description of Class 9', null=True)),
                ('institution_type', models.CharField(blank=True, choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Global Curriculum Track',
                'verbose_name_plural': 'Global Curriculum Tracks',
            },
        ),
        migrations.CreateModel(
            name='GlobalLesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='e.g., What is a Limit?', max_length=200)),
                ('content', models.TextField(blank=True, help_text='e.g., Lesson content', null=True)),
                ('video_url', models.URLField(blank=True, help_text='e.g., Youtube Video URL', null=True)),
                ('institution_type', models.CharField(blank=True, choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Global Lesson',
                'verbose_name_plural': 'Global Lessons',
            },
        ),
        migrations.CreateModel(
            name='GlobalMicroLesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='e.g., Micro lesson title', max_length=200)),
                ('content_type', models.CharField(choices=[('video', 'Video'), ('quiz', 'Quiz'), ('activity', 'Activity'), ('text', 'Text')], max_length=50)),
                ('institution_type', models.CharField(blank=True, choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], max_length=30, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, help_text='e.g., Youtube Video URL', null=True)),
                ('image_url', models.URLField(blank=True, help_text='e.g., Image URL', null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Global Micro Lesson',
                'verbose_name_plural': 'Global Micro Lessons',
            },
        ),
        migrations.CreateModel(
            name='GlobalModule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='e.g., Differential Calculus', max_length=200)),
                ('description', models.TextField(blank=True, help_text='e.g., Module description', null=True)),
                ('institution_type', models.CharField(blank=True, choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Global Module',
                'verbose_name_plural': 'Global Modules',
            },
        ),
        migrations.CreateModel(
            name='GlobalStream',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='# e.g., Science, Commerce, Major, Minor', max_length=100)),
                ('description', models.TextField(blank=True, help_text='e.g., Description of Science', null=True)),
                ('institution_type', models.CharField(blank=True, choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Global Stream',
                'verbose_name_plural': 'Global Streams',
            },
        ),
        migrations.CreateModel(
            name='GlobalSubject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='# e.g., Bangla First Paper, Math 101', max_length=200)),
                ('description', models.TextField(blank=True, help_text='e.g., Description of Bangla First Paper', null=True)),
                ('institution_type', models.CharField(blank=True, choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], max_length=30, null=True)),
                ('code', models.CharField(blank=True, help_text='e.g., MTH101', max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Global Subject',
                'verbose_name_plural': 'Global Subjects',
            },
        ),
        migrations.CreateModel(
            name='GlobalUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='# e.g., Limits', max_length=200)),
                ('description', models.TextField(blank=True, help_text='e.g., Unit description', null=True)),
                ('institution_type', models.CharField(blank=True, choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Global Unit',
                'verbose_name_plural': 'Global Units',
            },
        ),
        migrations.CreateModel(
            name='InstitutionFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_fee', models.DecimalField(decimal_places=2, help_text='Default monthly fee for all students', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('short_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('institution_type', models.CharField(choices=[('pre_cadet', 'Pre-Cadet'), ('kindergarten', 'Kindergarten'), ('primary_school', 'Primary School'), ('high_school', 'High School'), ('higher_secondary', 'Higher Secondary'), ('university', 'University'), ('coaching', 'Coaching Center'), ('individual', 'Individual'), ('others', 'Others')], default='primary_school', max_length=30)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Institution Information',
                'verbose_name_plural': 'Institution Information',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MicroLesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Micro Lesson',
                'verbose_name_plural': 'Micro Lessons',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='e.g., Section A, Section B', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Stream / Group',
                'verbose_name_plural': 'Streams / Groups',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Student Enrollment',
                'verbose_name_plural': 'Student Enrollments',
            },
        ),
        migrations.CreateModel(
            name='StudentFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.DecimalField(decimal_places=2, help_text='Custom fee for this student', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TeacherEnrollment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Teacher Enrollment',
                'verbose_name_plural': 'Teacher Enrollments',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CurriculumTrackFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.DecimalField(decimal_places=2, help_text='Custom fee for this curriculum track', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('curriculum_track', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fee', to='institution.curriculumtrack')),
            ],
        ),
        migrations.AddField(
            model_name='curriculumtrack',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institution_curriculum_tracks_name', to='institution.globalcurriculumtrack'),
        ),
    ]
